# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I wanted a better picture of the whole table
SELECT * FROM Spotifydata;


#Next finding the average danceability, energy, and popularity
SELECT  AVG(danceability), AVG (energy), AVG (popularity)
FROM Spotifydata;

#Then I determined who the Top 10 artists are by popularity
SELECT track_name, artist_name, popularity
FROM BIT_DB.spotifydata
ORDER BY popularity desc
LIMIT 10;

#Which artists had the most songs in the table
SELECT DISTINCT artist_name, COUNT (id)
FROM Spotifydata
WHERE id >2 
GROUP BY artist_name
ORDER BY COUNT(id) DESC
LIMIT 5;

#Which song had the most danceablilty 
SELECT artist_name, track_name, MAX(danceability)
FROM Spotifydata;


#Which song had the least danceablilty 
SELECT artist_name, track_name, MIN(danceability)
FROM Spotifydata;
